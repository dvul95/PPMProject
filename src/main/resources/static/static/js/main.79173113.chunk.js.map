{"version":3,"sources":["actions/ProjectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateButton.js","components/Dashboard.js","SecurityUtils/setJWToken.js","actions/SecurityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/ErrorReducer.js","reducers/ProjectReducer.js","reducers/BacklogReducer.js","reducers/SecurityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/BacklogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","SecurityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","projectDescription","to","onClick","bind","Component","connect","window","confirm","delete","CreateButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","startDate","endDate","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","description","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","accCriteria","Backlog","tasks","todoList","inprogressList","doneList","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","createdAt","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmedPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.79173113.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\n//create Projects\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: e.response.data\r\n    });\r\n  }\r\n};\r\n\r\n//get Projects\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/projects\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n//get Project\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\n//delete Project\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm(\"Do you want to DELETE the project and its data?\")) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// Types for backlog actions\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n// user security\r\n\r\nexport const SET_CURR_USER = \"SET_CURR_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/ProjectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.projectDescription}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project </i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default CreateButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateButton from \"./Project/CreateButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/ProjectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  //lifecycle hook\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURR_USER } from \"./types\";\r\nimport setJWToken from \"../SecurityUtils/setJWToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: e.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    const { token } = res.data;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJWToken(token);\r\n    const decoded = jwt_decode(token);\r\n\r\n    dispatch({\r\n      type: SET_CURR_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: e.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWToken(false);\r\n  dispatch({\r\n    type: SET_CURR_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/SecurityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/ProjectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      projectDescription: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  // ----------------\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    //prevents reloading\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      projectDescription: this.state.projectDescription,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName,\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier,\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectDescription,\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"projectDescription\"\r\n                      value={this.state.projectDescription}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectDescription}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"startDate\"\r\n                      value={this.state.startDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"endDate\"\r\n                      value={this.state.endDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [], //projects_array\r\n  project: {} // project_object\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURR_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false,\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURR_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport ErrorReducer from \"./ErrorReducer\";\r\nimport ProjectReducer from \"./ProjectReducer\";\r\nimport BacklogReducer from \"./BacklogReducer\";\r\nimport SecurityReducer from \"./SecurityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: ErrorReducer,\r\n  project: ProjectReducer,\r\n  backlog: BacklogReducer,\r\n  security: SecurityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\n//if it is chrome....\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  //creates the store\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/ProjectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      projectDescription: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //Lifecycle hook\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      projectDescription,\r\n      startDate,\r\n      endDate,\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      projectDescription,\r\n      startDate,\r\n      endDate,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      projectDescription: this.state.projectDescription,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n\r\n    this.props.createProject(UpdateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Edit Project</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectDescription,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"projectDescription\"\r\n                    value={this.state.projectDescription}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.projectDescription}\r\n                  </div>\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/BacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    //HIGH priority\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    //MEDIUM priority\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n    //LOW priority\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">{project_task.accCriteria}</p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: e.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: e.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (e) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(\r\n      `/api/backlog/${backlog_id}/${pt_id}`,\r\n      project_task\r\n    );\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: e.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are trying to delete: ${pt_id}.This action cannot be undone.`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks } = this.props;\r\n\r\n    const tasks = project_tasks.map((project_task) => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    //list of task Items\r\n\r\n    let todoList = [];\r\n    let inprogressList = [];\r\n    let doneList = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      //console.log(tasks[i]);\r\n\r\n      //TODO items\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoList.push(tasks[i]);\r\n      }\r\n      //In progress items\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inprogressList.push(tasks[i]);\r\n      }\r\n      //done items\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneList.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>To do</h3>\r\n              </div>\r\n            </div>\r\n            {todoList}\r\n            {/**  */}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inprogressList}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneList}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/BacklogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //error handling\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n  //hooks\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No project tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/BacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      accCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //hook\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      accCriteria: this.state.accCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name and Project ID</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"accCriteria\"\r\n                    value={this.state.accCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/BacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      accCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      createdAt: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //hook\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      accCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      createdAt,\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      accCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      createdAt,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      accCriteria: this.state.accCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      createdAt: this.state.createdAt,\r\n    };\r\n\r\n    // console.log(updateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      updateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} + Project Task ID:{\" \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"accCriteria\"\r\n                    value={this.state.accCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management App\r\n                </h1>\r\n                <p className=\"lead\">Create an account to add your projects</p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/SecurityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmedPassword: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmedPassword: this.state.confirmedPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmedPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmedPassword\"\r\n                    value={this.state.confirmedPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmedPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmedPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/SecurityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecureRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecureRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecureRoute);\r\n","import React from \"react\";\r\n//import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWToken from \"./SecurityUtils/setJWToken\";\r\nimport { SET_CURR_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/SecurityActions\";\r\nimport SecureRoute from \"./SecurityUtils/SecureRoute\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWToken(jwtToken);\r\n  const decoded_jwtToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURR_USER,\r\n    payload: decoded_jwtToken,\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded_jwtToken.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n\r\n          <Switch>\r\n            <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <SecureRoute exact path=\"/addProject\" component={AddProject} />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/updateProject/:id\"\r\n              component={UpdateProject}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/projectBoard/:id\"\r\n              component={ProjectBoard}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/addProjectTask/:id\"\r\n              component={AddProjectTask}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n              component={UpdateProjectTask}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}